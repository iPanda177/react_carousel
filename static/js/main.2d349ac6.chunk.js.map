{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","step","frameSize","itemWidth","animationDuration","infinite","currentPosition","disabledLeft","disabledRight","scrollLeft","stepWidth","setState","setInfinite","updateButtonState","scrollRight","maxShift","props","images","length","current","setStep","e","target","value","setFrameSize","setItemWidth","setAnimationDuration","min","changeInfinite","this","listWidth","className","style","width","map","image","src","alt","indexOf","transform","transition","type","disabled","onClick","htmlFor","id","max","onChange","checked","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2d349ac6.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n};\n\ntype State = {\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n  currentPosition: number;\n  disabledLeft: boolean;\n  disabledRight: boolean;\n};\n\nexport class Carousel extends React.Component<Props, State> {\n  state = {\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n    currentPosition: 0,\n    disabledLeft: true,\n    disabledRight: false,\n  };\n\n  scrollLeft = () => {\n    const {\n      step,\n      itemWidth,\n      currentPosition,\n      infinite,\n    } = this.state;\n\n    const stepWidth = itemWidth * step;\n    const shift = currentPosition + stepWidth;\n\n    if (shift > 0) {\n      this.setState((state) => ({\n        currentPosition: state.currentPosition - state.currentPosition,\n      }));\n    } else {\n      this.setState((state) => ({\n        currentPosition: state.currentPosition + stepWidth,\n      }));\n    }\n\n    if (infinite) {\n      this.setInfinite();\n    } else {\n      this.updateButtonState();\n    }\n  };\n\n  scrollRight = () => {\n    const {\n      step,\n      itemWidth,\n      frameSize,\n      currentPosition,\n      infinite,\n    } = this.state;\n\n    const { images } = this.props;\n    const maxShift = (images.length - frameSize) * itemWidth * -1;\n    const stepWidth = (itemWidth * step * -1);\n    const current = currentPosition + stepWidth;\n\n    if (current < maxShift) {\n      this.setState(() => ({\n        currentPosition: maxShift,\n      }));\n    } else {\n      this.setState({\n        currentPosition: current,\n      });\n    }\n\n    if (infinite) {\n      this.setInfinite();\n    } else {\n      this.updateButtonState();\n    }\n  };\n\n  setStep = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      step: +e.target.value,\n    });\n    this.updateButtonState();\n  };\n\n  setFrameSize = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      frameSize: +e.target.value,\n    });\n    this.updateButtonState();\n  };\n\n  setItemWidth = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      itemWidth: +e.target.value,\n    });\n    this.updateButtonState();\n  };\n\n  setAnimationDuration = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      animationDuration: +e.target.value,\n    });\n  };\n\n  setInfinite = () => {\n    const { images } = this.props;\n    const { frameSize, itemWidth, currentPosition } = this.state;\n    const min = (images.length - frameSize) * itemWidth * -1;\n    const max = 0;\n\n    if (currentPosition === min) {\n      this.setState({\n        currentPosition: max,\n        disabledRight: false,\n      });\n    }\n\n    if (currentPosition === max) {\n      this.setState({\n        currentPosition: min,\n        disabledLeft: false,\n      });\n    }\n  };\n\n  changeInfinite = () => {\n    this.setState((state) => ({\n      infinite: !state.infinite,\n    }));\n  };\n\n  updateButtonState = () => {\n    const { images } = this.props;\n    const { frameSize, itemWidth } = this.state;\n    const min = (images.length - frameSize) * itemWidth * -1;\n    const max = 0;\n\n    this.setState((state) => ({\n      disabledLeft: !(state.currentPosition < max),\n      disabledRight: !(state.currentPosition > min),\n    }));\n  };\n\n  render() {\n    const { images } = this.props;\n    const {\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n      currentPosition,\n      disabledLeft,\n      disabledRight,\n    } = this.state;\n    const listWidth = itemWidth * frameSize;\n\n    return (\n      <div className=\"Carousel\">\n        <ul className=\"Carousel__list\" style={{ width: listWidth }}>\n          {images.map(image => (\n            <li\n              key={image}\n              className=\"Carousel__image\"\n            >\n              <img\n                src={image}\n                alt={`${images.indexOf(image) + 1}`}\n                style={{\n                  width: itemWidth,\n                  transform: `translateX(${currentPosition}px)`,\n                  transition: `${animationDuration}ms`,\n                }}\n              />\n            </li>\n          ))}\n        </ul>\n\n        <div className=\"Carousel__buttons\">\n          <button\n            type=\"button\"\n            className=\"Carousel__button\"\n            disabled={disabledLeft}\n            onClick={this.scrollLeft}\n          >\n            Prev\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"Carousel__button\"\n            disabled={disabledRight}\n            onClick={this.scrollRight}\n            data-cy=\"next\"\n          >\n            Next\n          </button>\n        </div>\n\n        <div className=\"Carousel__label-container\">\n          <label\n            htmlFor=\"step\"\n            className=\"Carousel__label\"\n          >\n            Step\n            <input\n              id=\"step\"\n              type=\"number\"\n              min={1}\n              max={5}\n              value={step}\n              onChange={this.setStep}\n            />\n          </label>\n\n          <label\n            htmlFor=\"frameSize\"\n            className=\"Carousel__label\"\n          >\n            Frame size\n            <input\n              id=\"frameSize\"\n              type=\"number\"\n              value={frameSize}\n              min={2}\n              max={5}\n              onChange={this.setFrameSize}\n            />\n          </label>\n\n          <label\n            htmlFor=\"itemWidth\"\n            className=\"Carousel__label\"\n          >\n            Image width\n            <input\n              id=\"itemWidth\"\n              type=\"number\"\n              min={50}\n              max={300}\n              step={10}\n              value={itemWidth}\n              onChange={this.setItemWidth}\n            />\n          </label>\n\n          <label\n            htmlFor=\"animationDuration\"\n            className=\"Carousel__label\"\n          >\n            Animation duration\n            <input\n              id=\"animationDuration\"\n              type=\"number\"\n              min={300}\n              max={3000}\n              step={100}\n              value={animationDuration}\n              onChange={this.setAnimationDuration}\n            />\n          </label>\n\n          <label\n            htmlFor=\"infinite\"\n            className=\"Carousel__label\"\n          >\n            Infinite\n            <input\n              id=\"infinite\"\n              type=\"checkbox\"\n              checked={infinite}\n              onChange={this.changeInfinite}\n            />\n          </label>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ninterface State {\n  images: string[];\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 className=\"App__title\"\n          data-cy=\"title\"\n        >\n          Carousel with\n          {' '}\n          {images.length}\n          {' '}\n          images\n        </h1>\n\n        <Carousel images={images} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}